name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv7em-none-eabihf
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo check
        run: cargo check --target thumbv7em-none-eabihf

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv7em-none-eabihf
          components: clippy

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo clippy
        run: cargo clippy --target thumbv7em-none-eabihf -- -D warnings

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: [debug, release]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv7em-none-eabihf

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build debug
        if: matrix.profile == 'debug'
        run: cargo build --target thumbv7em-none-eabihf

      - name: Build release
        if: matrix.profile == 'release'
        run: cargo build --release --target thumbv7em-none-eabihf

      - name: Install cargo-binutils
        run: cargo install cargo-binutils

      - name: Install llvm-tools
        run: rustup component add llvm-tools-preview

      - name: Generate binary info
        run: |
          if [ "${{ matrix.profile }}" = "release" ]; then
            cargo size --release --target thumbv7em-none-eabihf --bin sk150c-kit
            cargo objcopy --release --target thumbv7em-none-eabihf --bin sk150c-kit -- -O binary sk150c-kit-${{ matrix.profile }}.bin
          else
            cargo size --target thumbv7em-none-eabihf --bin sk150c-kit
            cargo objcopy --target thumbv7em-none-eabihf --bin sk150c-kit -- -O binary sk150c-kit-${{ matrix.profile }}.bin
          fi

      - name: Upload firmware binary
        uses: actions/upload-artifact@v3
        with:
          name: sk150c-kit-${{ matrix.profile }}
          path: sk150c-kit-${{ matrix.profile }}.bin

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo test
        run: cargo test

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv7em-none-eabihf

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build documentation
        run: cargo doc --target thumbv7em-none-eabihf --no-deps

      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: target/thumbv7em-none-eabihf/doc/
